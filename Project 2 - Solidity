// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.9;

contract GradeCalculator {
    uint256 private mathGrade;
    uint256 private englishGrade;
    uint256 private scienceGrade;
    uint256 private totalAddGrades;

    event GradesInput(uint256 math, uint256 english, uint256 science);
    event AverageCalculated(uint256 average);
    event GradeStatus(string grade);

    function inputGrades(uint256 _math, uint256 _english, uint256 _science) external {
        require(_math <= 100 && _english <= 100 && _science <= 100, "Grades must be between 0 and 100");
        require(_math != 0 && _english != 0 && _science != 0, "Grades must not be zero");

        mathGrade = _math;
        englishGrade = _english;
        scienceGrade = _science;

        totalAddGrades = mathGrade + englishGrade + scienceGrade;

        emit GradesInput(_math, _english, _science);
    }

    function calculateAverage() public view returns (uint256) {
        require(totalAddGrades > 0, "Grades not yet input");
        uint256 average = totalAddGrades / 3;
        return average;
    }

    function getGradeStatus(uint256 average) public pure returns (string memory) {
        if (average >= 95 && average <= 100) {
            return "A+";
        } else if (average >= 90 && average < 95) {
            return "A";
        } else if (average >= 85 && average < 90) {
            return "B+";
        } else if (average >= 80 && average < 85) {
            return "B";
        } else if (average >= 75 && average < 80) {
            return "C+";
        } else {
            return "F";
        } }
}
